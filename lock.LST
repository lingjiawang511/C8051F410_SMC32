C51 COMPILER V9.52.0.0   LOCK                                                              10/10/2016 16:43:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LOCK
OBJECT MODULE PLACED IN lock.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lock.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <C8051F410.h>                 // SFR declarations
   2          #include <zyy_declare.h>
   3          
   4          //enable 电磁阀
   5          void lock_enable(uchar lock)
   6          {   
   7   1        uchar i;
   8   1      
   9   1        switch((lock-1)/8)
  10   1        {
  11   2          case 0://打开锁的位置编号 1-8 
  12   2              lock_1_8 |= 0x80 >> ( (lock-1)%8 );
  13   2              break;
  14   2          case 1:
  15   2              lock_9_16 |= 0x80 >> ( (lock-1)%8 );
  16   2              break;
  17   2          case 2:
  18   2              lock_17_24 |= 0x80 >> ( (lock-1)%8 );
  19   2              break;
  20   2          case 3:
  21   2              lock_25_32 |= 0x80 >> ( (lock-1)%8 );
  22   2              break;
  23   2          case 4:
  24   2              lock_33_40 |= 0x80 >> ( (lock-1)%8 );
  25   2              break;
  26   2      
  27   2          default:
  28   2                lock_1_8  = 0;    //关闭所有
  29   2                lock_9_16 = 0;
  30   2                lock_17_24 = 0;                 
  31   2                lock_25_32 = 0;
  32   2              lock_33_40 = 0;
  33   2              break;
  34   2        }
  35   1      
  36   1      
  37   1        for(i=0;i<8;i++)
  38   1        {
  39   2          LOCK_DATA = (lock_33_40 >> i) &0x1;
  40   2          Lock_Sclk_RS();
  41   2        }
  42   1      
  43   1        for(i=0;i<8;i++)
  44   1        {
  45   2          LOCK_DATA = (lock_25_32 >> i) &0x1;
  46   2          Lock_Sclk_RS();
  47   2        }
  48   1      
  49   1        for(i=0;i<8;i++)
  50   1        {
  51   2          LOCK_DATA = (lock_17_24 >> i) &0x1;
  52   2          Lock_Sclk_RS();
  53   2        }
  54   1      
  55   1        for(i=0;i<8;i++)
C51 COMPILER V9.52.0.0   LOCK                                                              10/10/2016 16:43:42 PAGE 2   

  56   1        {
  57   2          LOCK_DATA = (lock_9_16 >> i) &0x1;
  58   2          Lock_Sclk_RS();
  59   2        }
  60   1      
  61   1        for(i=0;i<8;i++)
  62   1        {
  63   2          LOCK_DATA = (lock_1_8 >> i) &0x1;
  64   2          Lock_Sclk_RS();
  65   2        }
  66   1        Lock_Lclk_RS();
  67   1      }
  68          
  69          //关闭电磁阀
  70          void disable_lock(uchar lock)
  71          {
  72   1        uchar i;
  73   1      
  74   1        switch((lock-1)/8)
  75   1        {
  76   2          case 0://打开锁的位置编号 1-8 
  77   2              lock_1_8 &= ~(0x80 >> ( (lock-1)%8 ));
  78   2              break;
  79   2          case 1:
  80   2              lock_9_16 &= ~(0x80 >> ( (lock-1)%8 ));
  81   2              break;
  82   2          case 2:
  83   2              lock_17_24 &= ~(0x80 >> ( (lock-1)%8 ));
  84   2              break;
  85   2          case 3:
  86   2              lock_25_32 &= ~(0x80 >> ( (lock-1)%8 ));
  87   2              break;
  88   2          case 4:
  89   2              lock_33_40 &= ~(0x80 >> ( (lock-1)%8 ));
  90   2              break;
  91   2      
  92   2          default:
  93   2                lock_1_8  = 0;    //关闭所有
  94   2                lock_9_16 = 0;
  95   2                lock_17_24 = 0;                 
  96   2                lock_25_32 = 0;
  97   2                lock_33_40 = 0;
  98   2              break;
  99   2        }
 100   1      
 101   1      
 102   1        for(i=0;i<8;i++)
 103   1        {
 104   2          LOCK_DATA = (lock_33_40 >> i) &0x1;
 105   2          Lock_Sclk_RS();
 106   2        }
 107   1      
 108   1        for(i=0;i<8;i++)
 109   1        {
 110   2          LOCK_DATA = (lock_25_32 >> i) &0x1;
 111   2          Lock_Sclk_RS();
 112   2        }
 113   1      
 114   1        for(i=0;i<8;i++)
 115   1        {
 116   2          LOCK_DATA = (lock_17_24 >> i) &0x1;
 117   2          Lock_Sclk_RS();
C51 COMPILER V9.52.0.0   LOCK                                                              10/10/2016 16:43:42 PAGE 3   

 118   2        }
 119   1      
 120   1        for(i=0;i<8;i++)
 121   1        {
 122   2          LOCK_DATA = (lock_9_16 >> i) &0x1;
 123   2          Lock_Sclk_RS();
 124   2        }
 125   1      
 126   1        for(i=0;i<8;i++)
 127   1        {
 128   2          LOCK_DATA = (lock_1_8 >> i) &0x1;
 129   2          Lock_Sclk_RS();
 130   2        }
 131   1        Lock_Lclk_RS();
 132   1      }
 133          
 134          //检查是否有打开的电磁阀，并记录电磁阀编号和500ms定时时间
 135          void lock_control(void)
 136          {
 137   1        uchar i;           
 138   1        
 139   1        if( (UART0.LOCK_ID >= 1) && (UART0.LOCK_ID <= 40) )
 140   1        {//存储打开的电磁阀编号和时间
 141   2            for(i=0;(i<i+LockAddr[i] && i<5);i++);       //LockAddr[i]：LockAddr[0]、LockAddr[1]、LockAddr[2]、Lock
             -Addr[3]、LockAddr[4]电磁阀打开500ms编号数组  存储打开的电磁阀编号1-40
 142   2      
 143   2            if (i <= 4)
 144   2            {
 145   3              LockAddr[i]     = UART0.LOCK_ID;          //存储电磁阀编号
 146   3              Lock_500ms[i]   = Timer0Value + 20;       //500ms定时
 147   3      
 148   3              lock_enable(UART0.LOCK_ID);               //enable solid
 149   3              UART0.LOCK_ID = 0;
 150   3            }
 151   2            else if (UART0.LOCK_ID == 0xff)
 152   2            {//关闭所有LOCK
 153   3              
 154   3              disable_lock(0xff);
 155   3              UART0.LOCK_ID = 0;
 156   3            }
 157   2            else
 158   2            {//5个已经打开的电磁阀没有关闭的情况下，不再开启另外的电磁阀
 159   3              ;
 160   3            }
 161   2        }
 162   1        else
 163   1        {
 164   2      
 165   2        }
 166   1      
 167   1      
 168   1      }
 169          
 170          //检查电磁阀打开时间  500ms
 171          void Check_lock_500ms(void)
 172          {
 173   1        uchar i;
 174   1      
 175   1        for(i=0;i<5;i++)
 176   1        {
 177   2          if (LockAddr[i] == 0)
 178   2          {
C51 COMPILER V9.52.0.0   LOCK                                                              10/10/2016 16:43:42 PAGE 4   

 179   3      
 180   3          }
 181   2          else
 182   2          {//检查500ms时间是否已经到了
 183   3            if(Lock_500ms[i] == Timer0Value)
 184   3            {
 185   4              disable_lock(LockAddr[i]);  //关闭电磁阀
 186   4              LockAddr[i] = 0;      //清除电磁阀记录
 187   4            }
 188   3          }
 189   2      
 190   2        }
 191   1      }
 192          
 193          
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    697    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
